/* 
   Definition of Linked List Node 
   struct Node {
       int data;
       struct Node* next;
       
       Node(int x) {
           data = x;
           next = NULL;
       }
   };
*/

Node* deleteNode(Node* head, int position) {
    // If the list is empty, return NULL
    if (head == NULL) return NULL;
    
    // If the node to delete is the first node
    if (position == 1) {
        Node* temp = head;    // Store the current head
        head = head->next;    // Move head to the next node
        delete temp;          // Free memory of the deleted node
        return head;          // Return new head
    }

    // Traverse the list to find the (position-1)th node
    Node* prev = head;
    for (int i = 1; prev != NULL && i < position - 1; i++) {
        prev = prev->next;
    }

    // If position is out of bounds or node doesn't exist
    if (prev == NULL || prev->next == NULL) {
        return head;
    }

    // Node to be deleted
    Node* temp = prev->next;
    prev->next = temp->next;  // Unlink the node from the list
    delete temp;              // Free memory

    return head;              // Return head of modified list
}
